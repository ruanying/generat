package ${basePackage}.controller;

import com.central.common.model.PageResult;
import com.central.common.model.Result;
import ${basePackage}.model.dto.${model}QueryDTO;
import ${basePackage}.model.po.${model};
import ${basePackage}.service.I${model}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import javax.validation.Valid;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * ${tableComment}
 *
 * @author ${author}
 * @createTime ${datetime}
 * @className ${model}Controller
 * @package ${basePackage}.controller
 */
@Slf4j
@RestController
@RequestMapping("/${model_}")
@Api(tags = "${tableComment}")
public class ${model}Controller {

    @Autowired
    private I${model}Service ${model_}Service;

    /**
     * 列表
     */
    @ApiOperation(value = "查询列表")
    @GetMapping
    public PageResult<${model}> get${model}sByPage(${model}QueryDTO dto) {
        return ${model_}Service.get${model}sByPage(dto);
    }

    /**
     * 查询
     */
    @ApiOperation(value = "查询")
    @GetMapping("/{id}")
    public Result<${model}> find${model}ById(@PathVariable Long id) {
        ${model} model = ${model_}Service.getById(id);
        return Result.succeed(model, "查询成功");
    }

    /**
     * 新增or更新
     */
    @ApiOperation(value = "新增或更新")
    @PostMapping
    public Result<Void> saveOrUpdate(@Valid @RequestBody ${model} dto) {
        ${model_}Service.saveOrUpdate(dto);
        return Result.succeed("保存成功");
    }

    /**
     * 删除
     */
    @ApiOperation(value = "删除")
    @DeleteMapping("/{id}")
    public Result<Void> delete(@PathVariable Long id) {
        ${model_}Service.removeById(id);
        return Result.succeed("删除成功");
    }

}